plugins {
    id 'com.android.application'
}

import groovy.xml.XmlSlurper

android {
    namespace 'com.example.qupos'
    compileSdk 34

    signingConfigs {
        release {
            storeFile file("C:\\Users\\philasandeB\\Documents\\mykeystore\\keystore.jks")
            storePassword project.hasProperty('KEYSTORE_PASSWORD') ? project.getProperty('KEYSTORE_PASSWORD') : ""
            keyAlias project.hasProperty('KEY_ALIAS') ? project.getProperty('KEY_ALIAS') : ""
            keyPassword project.hasProperty('KEY_PASSWORD') ? project.getProperty('KEY_PASSWORD') : ""
        }
    }

    defaultConfig {
        applicationId "za.co.qupos"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName "1.0.0" // ✅ Must be a string literal for auto-increment to work
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_BASE_URL", '"http://102.219.85.66:8080/api/"'
        }
        release {
            signingConfig signingConfigs.release
            buildConfigField "String", "API_BASE_URL", '"https://your-production-api-url.com/api/"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/LICENSE.md'
    }

    // ✅ Rename APK file using app_name from strings.xml
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def buildType = variant.buildType.name
            def versionName = variant.versionName
            def versionCode = variant.versionCode

            // Read <string name="app_name"> from strings.xml
            def stringsFile = file("src/main/res/values/strings.xml")
            def appName = "DefaultAppName"

            if (stringsFile.exists()) {
                def strings = new XmlSlurper().parse(stringsFile)
                def nameNode = strings.string.find { it.@name == 'app_name' }
                if (nameNode != null) {
                    appName = nameNode.text()
                }
            }

            def sanitizedAppName = appName.replaceAll("[^a-zA-Z0-9_\\-]", "_")
            output.outputFileName = "${sanitizedAppName}.apk"

        }
    }
}

// ✅ Auto-increment versionName (x.y.z) before release build
def incrementVersionName() {
    File buildFile = file('build.gradle')
    def content = buildFile.text

    def versionPattern = /versionName\s+"(\d+)\.(\d+)\.(\d+)"/
    def matcher = versionPattern.matcher(content)

    if (matcher.find()) {
        int major = matcher.group(1).toInteger()
        int minor = matcher.group(2).toInteger()
        int patch = matcher.group(3).toInteger()

        // Increment patch version
        patch += 1
        if (patch >= 10) {
            patch = 0
            minor += 1
        }
        if (minor >= 10) {
            minor = 0
            major += 1
        }

        String newVersion = "$major.$minor.$patch"
        content = content.replaceFirst(versionPattern, "versionName \"$newVersion\"")
        buildFile.write(content)
        println "✅ Version updated to: $newVersion"
    } else {
        println "⚠️ versionName not found or not in x.y.z format"
    }
}

// ✅ Run version increment before release build
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.doFirst {
            incrementVersionName()
        }
    }
}

configurations.all {
    resolutionStrategy {
        force 'junit:junit:4.13.2'
    }
}

dependencies {
    implementation 'com.google.android.gms:play-services-maps:19.1.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.aldoapps:autoformatedittext:0.9.3'
    implementation 'org.apache.xmlrpc:xmlrpc-client:3.1.3'
    implementation 'com.sun.mail:android-mail:1.6.7'
    implementation 'com.sun.mail:android-activation:1.6.7'
    implementation 'com.mailjet:mailjet-client:5.2.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
    implementation 'com.auth0:java-jwt:4.5.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'androidx.browser:browser:1.8.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation group: 'zw.co.paynow', name: 'java-sdk', version: '1.1.2'
}
