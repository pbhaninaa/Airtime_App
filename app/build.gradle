plugins {
    id 'com.android.application'
}

android {
    namespace 'com.example.testingmyskills'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.testingmyskills"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_BASE_URL", '"http://102.219.85.66:8080/api/"'
        }
        release {
            buildConfigField "String", "API_BASE_URL", '"https://your-production-api-url.com/api/"'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/LICENSE.md'
    }
}

configurations.all {
    resolutionStrategy {
        force 'junit:junit:4.13.2'
    }
}

dependencies {
    implementation 'com.google.android.gms:play-services-maps:18.0.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'com.aldoapps:autoformatedittext:0.9.3'
    implementation 'org.apache.xmlrpc:xmlrpc-client:3.1.3'
    implementation 'com.sun.mail:android-mail:1.6.7'
    implementation 'com.sun.mail:android-activation:1.6.7'
    implementation 'com.mailjet:mailjet-client:5.2.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.auth0:java-jwt:3.18.2'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'androidx.browser:browser:1.5.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
}

import java.util.regex.Pattern

// Function to increment versionName by 0.1
def incrementVersionName() {
    File buildFile = file('build.gradle')
    def content = buildFile.text

    def versionPattern = /versionName\s+"(\d+\.\d+\.\d+)"/
    def matcher = Pattern.compile(versionPattern).matcher(content)

    if (matcher.find()) {
        String currentVersion = matcher.group(1)
        def parts = currentVersion.split("\\.")
        int major = Integer.parseInt(parts[0])
        int minor = Integer.parseInt(parts[1])
        int patch = Integer.parseInt(parts[2])

        // Increment the minor version (0.1)
        minor += 1

        // Adjust major and minor versions if needed
        if (minor >= 10) {
            minor = 0
            major += 1
        }

        String newVersion = "$major.$minor.$patch"
        content = content.replaceFirst(versionPattern, "versionName \"$newVersion\"")
        buildFile.write(content)
        println "Version updated to: $newVersion"
    } else {
        println "Version name not found in build.gradle."
    }
}

// Hook into the build process
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.doFirst {
            incrementVersionName()
        }
    }
}
